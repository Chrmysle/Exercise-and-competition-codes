#include <stdio.h>
#include <string.h>

// non-recursive version
int bin_find(int b[], int key, int low, int high)
{
    int mid;
    while (low <= high)
    {
        mid = (low + high) / 2;
        if (key == b[mid])
            return mid;
        else if (key < b[mid])
            high = mid - 1;
        else
            low = mid + 1;
    }
    return-1;
}


int cmp(const void* p1, const void* p2)
{
    return (*(int*)p1 - *(int*)p2);
}

int arr_1[300001];
int origin[300001];
int arr_2[300001];

int main()
{
    int amount;

    scanf("%d", &amount);

    for (int i = 0; i < amount; i++)
    {
        scanf("%d", &arr_1[i]);
        origin[i] = arr_1[i];
    }

    qsort(arr_1, amount, sizeof(int), cmp);

    int count = 0;
    arr_2[0] = arr_1[0];

    for (int i = 1; i < amount; i++)
    {
        if (arr_1[i] > arr_2[count])
        {
            count++;
            arr_2[count] = arr_1[i];
        }
    }
    
    for (int i = 0; i < amount; i++)
    {
        printf("%d ", bin_find(arr_2, origin[i], 0, count) + 1);
    }
}
